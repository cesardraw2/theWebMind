<?php

namespace en;

require_once dirname(__FILE__) . '/../../../../../mind3rd/API/languages/en/Verbalizer.php';

/**
 * Test class for Verbalizer.
 * Generated by PHPUnit on 2011-02-08 at 21:48:10.
 */
class VerbalizerTest extends \PHPUnit_Framework_TestCase {

	/**
	 * @var Verbalizer
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp() {
		$this->object = new Verbalizer;
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown() {

	}

	public function testIsVerb() {
		$this->assertTrue(Verbalizer::isVerb('run'));
	}
	public function testIsVerb2() {
		$this->assertTrue(Verbalizer::isVerb('runs'));
	}
	public function testIsVerb3() {
		$this->assertTrue(Verbalizer::isVerb('may'));
	}
	public function testIsVerb4() {
		$this->assertTrue(Verbalizer::isVerb('has'));
	}
	public function testIsVerb5() {
		$this->assertTrue(Verbalizer::isVerb('matches'));
	}
	public function testIsVerb6() {
		$this->assertTrue(Verbalizer::isVerb('take'));
	}
	public function testIsVerb7() {
		$this->assertTrue(Verbalizer::isVerb('have'));
	}
	public function testIsVerb8() {
		$this->assertTrue(Verbalizer::isVerb('can'));
	}
	public function testIsVerb9() {
		$this->assertTrue(Verbalizer::isVerb('brushes'));
	}
	public function testIsVerb10() {
		$this->assertTrue(Verbalizer::isVerb('teaches'));
	}

	public function testToInfinitive() {
		$this->assertEquals(Verbalizer::toInfinitive('runs'), 'run');
	}
	public function testToInfinitive2() {
		$this->assertEquals(Verbalizer::toInfinitive('matches'), 'match');
	}
	public function testToInfinitive3() {
		$this->assertEquals(Verbalizer::toInfinitive('runs'), 'run');
	}
	public function testToInfinitive4() {
		$this->assertEquals(Verbalizer::toInfinitive('runs'), 'run');
	}
}